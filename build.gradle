buildscript {
    repositories {
        jcenter()
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://dl.bintray.com/jetbrains/kotlin-native-dependencies' }
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.11'
}

repositories {
    jcenter()
    mavenCentral()
}

apply plugin: 'maven-publish'


group 'io.sellmair'
version '2.0.0-alpha.0'


kotlin {
    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.0.1'
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }

        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1'
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }

        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }

        macosMain {
            dependencies {
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-native:1.0.1'
            }
        }

        macosTest {
            dependsOn commonTest
        }

        iosMain {
            dependsOn macosMain
        }

        iosTest {
            dependsOn macosTest
        }

    }


    targets {
        fromPreset(presets.jvm, 'jvm')
        fromPreset(presets.macosX64, 'macos')
        fromPreset(presets.iosArm64, 'ios')

        all {
            compilations.all {
                tasks[compileKotlinTaskName].kotlinOptions {
                    freeCompilerArgs = ['-Xuse-experimental=kotlin.Experimental']
                }
            }
        }
    }
}






